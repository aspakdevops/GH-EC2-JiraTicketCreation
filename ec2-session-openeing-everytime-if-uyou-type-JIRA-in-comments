its working fine when i deleted webhook and re created again. that is now /JIRA will create a jira issue.
Here i obswerved whenver i enterd /JIRA in commnet and it will opening a session in in ec2 for the python script like below python3 lokka.py *
Serving Flask app 'lokka' * Debug mode: off WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead. 
* Running on all addresses (0.0.0.0) * Running on http://127.0.0.1:5000 * Running on http://172.31.88.223:5000 Press CTRL+C to quit 203.145.49.206 - - 
[17/Jun/2025 16:57:01] "GET /createJIRA HTTP/1.1" 405 - 203.145.49.206 - - [17/Jun/2025 17:00:00] "POST /createJIRA HTTP/1.1" 415 - 140.82.115.23 - - 
[17/Jun/2025 17:02:46] "POST /createJIRA HTTP/1.1" 200 - 140.82.115.10 - - [17/Jun/2025 17:03:04] "POST /createJIRA HTTP/1.1" 200 - 140.82.115.11 - - 
[17/Jun/2025 17:03:20] "POST /createJIRA HTTP/1.1" 200 - 

and it creating a jira ticket. now if i do CTRL + C in ec2 , that session is over and becuase of the when i enter /JIRA in commenst that time its not creating the jira issue and github webhook went offline. 
SO thios happned bcz i did CTRL + C in ec2 so why and how to resolve this and make me understood?

vim /etc/systemd/system/jira-flask.service::::::::;
[Unit]
Description=Flask Webhook Listener for GitHub ➡️ JIRA
After=network.target

[Service]
User=root
WorkingDirectory=/root
ExecStart=/root/myenv/bin/python3 /root/lokka.py
Restart=always
Environment=FLASK_ENV=production

[Install]
WantedBy=multi-user.target
---------------------
sudo systemctl daemon-reexec
sudo systemctl daemon-reload
sudo systemctl enable jira-flask
sudo systemctl start jira-flask
--------------------------------

now when you type /JIRA ijn commnmets and it will create jira and if you open ec2 as well you wont see any session open for this script. Since its running as systemd process
sudo systemctl status jira-flask=----> by thius you can check the status.
--------------------------------------------
to check the logs of script getting requests???

wher can i check the logs of this script getting requests
Nice—you’re thinking like an ops engineer now. Since you’ve set up your Flask app as a systemd service (jira-flask), your logs are managed by the system’s journal. You can view all requests hitting your endpoint with:

bash
journalctl -u jira-flask -f
That -f flag means "follow", like tail -f, so it’ll stream logs live as your app receives traffic.

If you want to see the full history:

bash
journalctl -u jira-flask
Or filter by a specific time window:

bash
journalctl -u jira-flask --since "30 minutes ago"
